import tkinter as tk
from tkinter import *
from tkinter import messagebox
import sys

class RCMenuBar(tk.Menu):
    def __init__(self, parent):
        tk.Menu.__init__(self, parent)
        fileMenu = tk.Menu(self, tearoff=0)
        self.add_cascade(label="File",underline=0, menu=fileMenu)
        fileMenu.add_command(label="Control Settings",underline=0, command = self.controlSetting)
        fileMenu.add_command(label="Motor Settings",underline=0, command = self.motorsetting)
        fileMenu.add_separator()
        fileMenu.add_command(label="Exit", underline=1, command=self.quit)
        helpMenu = tk.Menu(self, tearoff=0)
        self.add_cascade(label="Help", menu = helpMenu, underline=0)
        helpMenu.add_command(label="About", underline=0, command = self.about)

    def quit(self):
        print("Exit")
        #sys.exit(0)
    def controlSetting(self):  #will allow customization
        controlSet = Toplevel()
        controlSet.title("Control Panel")
        controlSet.minsize(300,300)
        Label(controlSet, text="This is the Control Page").grid(row=0, column=1, padx=10, pady=2)
        controlSet.mainloop()
    
    def motorsetting(self):  #will allow customization
        motorSetsFile = open("motorSetting.txt", "r") #current setup lets you save to a doc but not show in a log or print in??
        loadedVar = motorSetsFile.read(1)
        print(motorSetsFile.read(1))
        motorSetsFile.close()
        
        motorSet = Toplevel()
        motorSet.title("Motor Control Panel")
        motorSet.minsize(300,300)
        Label(motorSet, text="Here you can toggle whether manual speed control is active").grid(row=0, column=0, padx=10, pady=2)
        Label(motorSet, text=" ").grid(row=1, column=1, padx=10, pady=2)
        Label(motorSet, text="Would you like to toggle manual speed?:").grid(row=2, column=0, padx=10, pady=2) #replace 'off' with a loaded in var %
        motorFrame = Frame(motorSet, width=200, height=10, borderwidth=1)
        motorFrame.grid(row=3, column=0, padx=10, pady=2)
        selected = IntVar()
        radioOn = Radiobutton(motorFrame, text="On", value=1, variable=selected).grid(row=0, column=0, padx=10, pady=2)
        radioOff = Radiobutton(motorFrame, text="Off",value=0, variable=selected).grid(row=0, column=1, padx=10, pady=2)
        saveLock = Button(motorSet, text="Save").grid(row=4, column=0, padx=10, pady=2) #, command = self.saveMotor
        stateLog = Text(motorSet, width = 20, height = 2, takefocus=0)
        stateLog.grid(row=5, column=0, padx=10, pady=2)
        stateLog.insert(0.0,"1 is On, 0 is Off\nCurrent state: ") #+ loadedVar)
        motorSet.mainloop()
        
    def about(self):
        messagebox.showinfo("About", """Hello, welcome to this RC application\n
        This application will function as a minature version of a real full size car, giving the user the ability to control it using GUI or keyboard inputs as well as toggle assistive driving technologies:\n
        If you have any questions please contact N Lloyd here:\n P16187037@my365.dmu.ac.uk""")
        
        
